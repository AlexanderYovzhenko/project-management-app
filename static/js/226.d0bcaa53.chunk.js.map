{"version":3,"file":"static/js/226.d0bcaa53.chunk.js","mappings":"sQACA,EAAuB,uBAAvB,EAA+D,iCAA/D,EAAyG,yBAAzG,EAA0I,wBC0G1I,IACA,EAAe,IAA0B,0D,0DCjBzC,EA5EiB,WACf,OAAyDA,EAAAA,EAAAA,IAAe,SAACC,GAAD,OAAWA,EAAMC,UAAjFA,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,UAAWC,EAA3B,EAA2BA,cAAeC,EAA1C,EAA0CA,WAClCC,GAAUN,EAAAA,EAAAA,IAAe,SAACC,GAAD,OAAWA,EAAMM,QAA1CD,MACFE,GAAWC,EAAAA,EAAAA,KACTC,GAAMC,EAAAA,EAAAA,KAAND,EACR,GAAsCE,EAAAA,EAAAA,WAAS,GAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,MAEAC,EAAAA,EAAAA,YAAU,WACHf,EAAOgB,QACVV,GAASW,EAAAA,EAAAA,IAAUb,MAEpB,CAACJ,EAAOgB,UAEXD,EAAAA,EAAAA,YAAU,WACJb,IACFgB,EAAAA,GAAAA,QAAcV,EAAE,qBAAsB,CACpCW,SAAU,aACVC,UAAW,IACXC,iBAAiB,IAEnBf,GAASgB,EAAAA,EAAAA,OAEQ,iBAAfnB,GAAgD,KAAfA,IACnCe,EAAAA,GAAAA,MAAYf,EAAY,CACtBgB,SAAU,aACVC,UAAW,IACXC,iBAAiB,IAEnBf,GAASiB,EAAAA,EAAAA,UAEV,CAACrB,EAAeC,IAOnB,OACE,iBAAKqB,UAAWC,EAAhB,WACE,SAACC,EAAA,EAAD,KACA,SAAC,KAAD,KACA,iBAAKF,UAAWC,EAAhB,WACE,SAAC,KAAD,KACA,wBAAKjB,EAAE,aACP,iBAAKgB,UAAWC,EAAhB,UACGxB,IAAa,SAAC0B,EAAA,EAAD,IACX3B,EAAOgB,OAAT,OACChB,QADD,IACCA,OADD,EACCA,EAAQ4B,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MACjB,OACE,iBAAcN,UAAWC,EAAzB,WACE,UAAC,KAAD,CAAMM,GAAE,iBAAYF,GAAMG,QAAS,kBAAM1B,GAAS2B,EAAAA,EAAAA,IAAcJ,KAAhE,WACE,gBAAKK,MAAO,GAAIC,IAAKC,EAAOC,IAAI,UAC/BP,MAEH,mBAAQQ,SAAUrC,EAAW+B,QAAS,kBAtBhC,SAACH,GACrBf,EAAYe,GACZjB,GAAe,GAoB2C2B,CAAcV,IAA1D,SACGrB,EAAE,cANGqB,OAYd,wBAAKrB,EAAE,uBAET,SAACgC,EAAA,EAAD,CACE7B,YAAaA,EACbC,eAAgBA,EAChB6B,OAAQ,eACRC,KAAM,CAAEtC,MAAAA,EAAOyB,GAAIhB","sources":["webpack://project-management-app/./src/pages/main-page/MainPage.module.scss?4a2d","pages/main-page/assets/board.svg","pages/main-page/MainPage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"main\":\"MainPage_main__aAJy2\",\"boards_wrapper\":\"MainPage_boards_wrapper__y3879\",\"boards\":\"MainPage_boards__xE5Xh\",\"board\":\"MainPage_board__IGqMw\"};","var _desc, _defs;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgBoard(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: 256,\n    height: 256,\n    viewBox: \"0 0 256 256\",\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _desc || (_desc = /*#__PURE__*/React.createElement(\"desc\", null, \"Created with Fabric.js 1.7.22\")), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null)), /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"translate(128 128) scale(0.72 0.72)\",\n    style: {}\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      stroke: \"none\",\n      strokeWidth: 0,\n      strokeDasharray: \"none\",\n      strokeLinecap: \"butt\",\n      strokeLinejoin: \"miter\",\n      strokeMiterlimit: 10,\n      fill: \"none\",\n      fillRule: \"nonzero\",\n      opacity: 1\n    },\n    transform: \"translate(-175.05 -175.05) scale(3.89 3.89)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M 35.813 54.013 H 4.514 C 2.025 54.013 0 51.987 0 49.498 V 4.514 C 0 2.025 2.025 0 4.514 0 h 31.299 c 2.489 0 4.514 2.025 4.514 4.514 v 44.984 C 40.328 51.987 38.303 54.013 35.813 54.013 z\",\n    style: {\n      stroke: \"none\",\n      strokeWidth: 1,\n      strokeDasharray: \"none\",\n      strokeLinecap: \"butt\",\n      strokeLinejoin: \"miter\",\n      strokeMiterlimit: 10,\n      fill: \"rgb(84,192,235)\",\n      fillRule: \"nonzero\",\n      opacity: 1\n    },\n    transform: \" matrix(1 0 0 1 0 0) \",\n    strokeLinecap: \"round\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M 35.813 90 H 4.514 C 2.025 90 0 87.975 0 85.485 V 69.741 c 0 -2.489 2.025 -4.515 4.514 -4.515 h 31.299 c 2.489 0 4.514 2.025 4.514 4.515 v 15.744 C 40.328 87.975 38.303 90 35.813 90 z\",\n    style: {\n      stroke: \"none\",\n      strokeWidth: 1,\n      strokeDasharray: \"none\",\n      strokeLinecap: \"butt\",\n      strokeLinejoin: \"miter\",\n      strokeMiterlimit: 10,\n      fill: \"rgb(248,182,76)\",\n      fillRule: \"nonzero\",\n      opacity: 1\n    },\n    transform: \" matrix(1 0 0 1 0 0) \",\n    strokeLinecap: \"round\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M 85.485 90 H 54.187 c -2.489 0 -4.515 -2.025 -4.515 -4.515 V 40.501 c 0 -2.489 2.025 -4.514 4.515 -4.514 h 31.299 c 2.489 0 4.515 2.025 4.515 4.514 v 44.984 C 90 87.975 87.975 90 85.485 90 z\",\n    style: {\n      stroke: \"none\",\n      strokeWidth: 1,\n      strokeDasharray: \"none\",\n      strokeLinecap: \"butt\",\n      strokeLinejoin: \"miter\",\n      strokeMiterlimit: 10,\n      fill: \"rgb(241,84,63)\",\n      fillRule: \"nonzero\",\n      opacity: 1\n    },\n    transform: \" matrix(1 0 0 1 0 0) \",\n    strokeLinecap: \"round\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M 85.485 24.773 H 54.187 c -2.489 0 -4.515 -2.025 -4.515 -4.515 V 4.514 C 49.672 2.025 51.697 0 54.187 0 h 31.299 C 87.975 0 90 2.025 90 4.514 v 15.745 C 90 22.748 87.975 24.773 85.485 24.773 z\",\n    style: {\n      stroke: \"none\",\n      strokeWidth: 1,\n      strokeDasharray: \"none\",\n      strokeLinecap: \"butt\",\n      strokeLinejoin: \"miter\",\n      strokeMiterlimit: 10,\n      fill: \"rgb(94,203,88)\",\n      fillRule: \"nonzero\",\n      opacity: 1\n    },\n    transform: \" matrix(1 0 0 1 0 0) \",\n    strokeLinecap: \"round\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgBoard);\nexport default __webpack_public_path__ + \"static/media/board.88411f0892a8830207bd717aaf1eef35.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getBoards } from '../../api/boards';\nimport Header from '../../components/header/Header';\nimport LoadingAnimation from '../../components/loading-animation/LoadingAnimation';\nimport { useAppDispatch, useAppSelector } from '../../redux-hooks/redux-hooks';\nimport { changeBoardId } from '../../store/columnsSlice';\nimport styles from './MainPage.module.scss';\nimport board from './assets/board.svg';\nimport { useTranslation } from 'react-i18next';\nimport ConfirmModal from '../../components/confirm-modal/ConfirmModal';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { toast, ToastContainer } from 'react-toastify';\nimport { resetCreateNewBoard, resetNewBoardError } from '../../store/boardsSlice';\n\nconst MainPage = () => {\n  const { boards, isLoading, isCreateBoard, errorBoard } = useAppSelector((state) => state.boards);\n  const { token } = useAppSelector((state) => state.auth);\n  const dispatch = useAppDispatch();\n  const { t } = useTranslation();\n  const [isOpenModal, setIsOpenModal] = useState(false);\n  const [targetId, setTargetId] = useState('');\n\n  useEffect(() => {\n    if (!boards.length) {\n      dispatch(getBoards(token));\n    }\n  }, [boards.length]);\n\n  useEffect(() => {\n    if (isCreateBoard) {\n      toast.success(t('new_board_created'), {\n        position: 'top-center',\n        autoClose: 3000,\n        hideProgressBar: true,\n      });\n      dispatch(resetCreateNewBoard());\n    }\n    if (errorBoard !== 'Unauthorized' && errorBoard !== '') {\n      toast.error(errorBoard, {\n        position: 'top-center',\n        autoClose: 3000,\n        hideProgressBar: true,\n      });\n      dispatch(resetNewBoardError());\n    }\n  }, [isCreateBoard, errorBoard]);\n\n  const deleteHandler = (id: string) => {\n    setTargetId(id);\n    setIsOpenModal(true);\n  };\n\n  return (\n    <div className={styles.main}>\n      <Header />\n      <ToastContainer />\n      <div className={styles.boards_wrapper}>\n        <ToastContainer />\n        <h1>{t('boards')}</h1>\n        <div className={styles.boards}>\n          {isLoading && <LoadingAnimation />}\n          {!!boards.length ? (\n            boards?.map(({ id, title }) => {\n              return (\n                <div key={id} className={styles.board}>\n                  <Link to={`/board/${id}`} onClick={() => dispatch(changeBoardId(id))}>\n                    <img width={40} src={board} alt=\"board\" />\n                    {title}\n                  </Link>\n                  <button disabled={isLoading} onClick={() => deleteHandler(id)}>\n                    {t('delete')}\n                  </button>\n                </div>\n              );\n            })\n          ) : (\n            <h4>{t('boards_not_found')}</h4>\n          )}\n          <ConfirmModal\n            isOpenModal={isOpenModal}\n            setIsOpenModal={setIsOpenModal}\n            action={'delete_board'}\n            data={{ token, id: targetId }}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MainPage;\n"],"names":["useAppSelector","state","boards","isLoading","isCreateBoard","errorBoard","token","auth","dispatch","useAppDispatch","t","useTranslation","useState","isOpenModal","setIsOpenModal","targetId","setTargetId","useEffect","length","getBoards","toast","position","autoClose","hideProgressBar","resetCreateNewBoard","resetNewBoardError","className","styles","Header","LoadingAnimation","map","id","title","to","onClick","changeBoardId","width","src","board","alt","disabled","deleteHandler","ConfirmModal","action","data"],"sourceRoot":""}